{"ast":null,"code":"import _toConsumableArray from \"/home/runner/work/queer/queer/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/runner/work/queer/queer/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/home/runner/work/queer/queer/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n/**\n * React Router DOM v6.6.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_enhanceManualRouteObjects, Router, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, UNSAFE_NavigationContext, useNavigate, createPath, UNSAFE_RouteContext, useMatches, useNavigation, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, ErrorResponse, invariant, joinPaths } from '@remix-run/router';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  var searchParams = createSearchParams(locationSearch);\n  var _iterator = _createForOfIteratorHelper(defaultSearchParams.keys()),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var key = _step.value;\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(function (value) {\n          searchParams.append(key, value);\n        });\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  var method;\n  var action;\n  var encType;\n  var formData;\n  if (isFormElement(target)) {\n    var submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    var form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n      if (target instanceof URLSearchParams) {\n        var _iterator2 = _createForOfIteratorHelper(target),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n              name = _step2$value[0],\n              value = _step2$value[1];\n            formData.append(name, value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if (target != null) {\n        for (var _i = 0, _Object$keys = Object.keys(target); _i < _Object$keys.length; _i++) {\n          var _name = _Object$keys[_i];\n          formData.append(_name, target[_name]);\n        }\n      }\n    }\n  }\n  var _window$location = window.location,\n    protocol = _window$location.protocol,\n    host = _window$location.host;\n  var url = new URL(action, protocol + \"//\" + host);\n  return {\n    url: url,\n    method: method.toLowerCase(),\n    encType: encType,\n    formData: formData\n  };\n}\nvar _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\"];\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  var entries = Object.entries(errors);\n  var serialized = {};\n  for (var _i2 = 0, _entries = entries; _i2 < _entries.length; _i2++) {\n    var _entries$_i = _slicedToArray(_entries[_i2], 2),\n      key = _entries$_i[0],\n      val = _entries$_i[1];\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      var error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\nfunction BrowserRouter(_ref) {\n  var basename = _ref.basename,\n    children = _ref.children,\n    window = _ref.window;\n  var historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n  var history = historyRef.current;\n  var _React$useState = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  var basename = _ref2.basename,\n    children = _ref2.children,\n    window = _ref2.window;\n  var historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n  var history = historyRef.current;\n  var _React$useState3 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    state = _React$useState4[0],\n    setState = _React$useState4[1];\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  var basename = _ref3.basename,\n    children = _ref3.children,\n    history = _ref3.history;\n  var _React$useState5 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    state = _React$useState6[0],\n    setState = _React$useState6[1];\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  var onClick = _ref4.onClick,\n    relative = _ref4.relative,\n    reloadDocument = _ref4.reloadDocument,\n    replace = _ref4.replace,\n    state = _ref4.state,\n    target = _ref4.target,\n    to = _ref4.to,\n    preventScrollReset = _ref4.preventScrollReset,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  var href = useHref(to, {\n    relative: relative\n  });\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target,\n    preventScrollReset: preventScrollReset,\n    relative: relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  var _ref5$ariaCurrent = _ref5[\"aria-current\"],\n    ariaCurrentProp = _ref5$ariaCurrent === void 0 ? \"page\" : _ref5$ariaCurrent,\n    _ref5$caseSensitive = _ref5.caseSensitive,\n    caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,\n    _ref5$className = _ref5.className,\n    classNameProp = _ref5$className === void 0 ? \"\" : _ref5$className,\n    _ref5$end = _ref5.end,\n    end = _ref5$end === void 0 ? false : _ref5$end,\n    styleProp = _ref5.style,\n    to = _ref5.to,\n    children = _ref5.children,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  var path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  var location = useLocation();\n  var routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  var _React$useContext = React.useContext(UNSAFE_NavigationContext),\n    navigator = _React$useContext.navigator;\n  var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  var locationPathname = location.pathname;\n  var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive: isActive,\n      isPending: isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  var style = typeof styleProp === \"function\" ? styleProp({\n    isActive: isActive,\n    isPending: isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive: isActive,\n    isPending: isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\nvar Form = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref6, forwardedRef) {\n  var reloadDocument = _ref6.reloadDocument,\n    replace = _ref6.replace,\n    _ref6$method = _ref6.method,\n    method = _ref6$method === void 0 ? defaultMethod : _ref6$method,\n    action = _ref6.action,\n    onSubmit = _ref6.onSubmit,\n    fetcherKey = _ref6.fetcherKey,\n    routeId = _ref6.routeId,\n    relative = _ref6.relative,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  var formAction = useFormAction(action, {\n    relative: relative\n  });\n  var submitHandler = function submitHandler(event) {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    var submitter = event.nativeEvent.submitter;\n    var submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace: replace,\n      relative: relative\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\nfunction ScrollRestoration(_ref7) {\n  var getKey = _ref7.getKey,\n    storageKey = _ref7.storageKey;\n  useScrollRestoration({\n    getKey: getKey,\n    storageKey: storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  var ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\nfunction useLinkClickHandler(to, _temp) {\n  var _ref8 = _temp === void 0 ? {} : _temp,\n    target = _ref8.target,\n    replaceProp = _ref8.replace,\n    state = _ref8.state,\n    preventScrollReset = _ref8.preventScrollReset,\n    relative = _ref8.relative;\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to, {\n    relative: relative\n  });\n  return React.useCallback(function (event) {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      var replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state,\n        preventScrollReset: preventScrollReset,\n        relative: relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    return getSearchParamsForLocation(location.search, defaultSearchParamsRef.current);\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\nfunction useSubmitImpl(fetcherKey, routeId) {\n  var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseSubmitImpl),\n    router = _useDataRouterContext.router;\n  var defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n    var _getFormSubmissionInf = getFormSubmissionInfo(target, defaultAction, options),\n      method = _getFormSubmissionInf.method,\n      encType = _getFormSubmissionInf.encType,\n      formData = _getFormSubmissionInf.formData,\n      url = _getFormSubmissionInf.url;\n    var href = url.pathname + url.search;\n    var opts = {\n      replace: options.replace,\n      formData: formData,\n      formMethod: method,\n      formEncType: encType\n    };\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\nfunction useFormAction(action, _temp2) {\n  var _ref9 = _temp2 === void 0 ? {} : _temp2,\n    relative = _ref9.relative;\n  var _React$useContext2 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext2.basename;\n  var routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n  var _routeContext$matches = routeContext.matches.slice(-1),\n    _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n    match = _routeContext$matches2[0]; // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  var path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative: relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n  var location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      var params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nvar fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n  var _useDataRouterContext2 = useDataRouterContext(DataRouterHook.UseFetcher),\n    router = _useDataRouterContext2.router;\n  var route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  var _React$useState7 = React.useState(function () {\n      return String(++fetcherId);\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    fetcherKey = _React$useState8[0];\n  var _React$useState9 = React.useState(function () {\n      !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n      return createFetcherForm(fetcherKey, routeId);\n    }),\n    _React$useState10 = _slicedToArray(_React$useState9, 1),\n    Form = _React$useState10[0];\n  var _React$useState11 = React.useState(function () {\n      return function (href) {\n        !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n        !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n        router.fetch(fetcherKey, routeId, href);\n      };\n    }),\n    _React$useState12 = _slicedToArray(_React$useState11, 1),\n    load = _React$useState12[0];\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var fetcher = router.getFetcher(fetcherKey);\n  var fetcherWithComponents = React.useMemo(function () {\n    return _extends({\n      Form: Form,\n      submit: submit,\n      load: load\n    }, fetcher);\n  }, [fetcher, Form, submit, load]);\n  React.useEffect(function () {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return function () {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  var state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return _toConsumableArray(state.fetchers.values());\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  var _ref10 = _temp3 === void 0 ? {} : _temp3,\n    getKey = _ref10.getKey,\n    storageKey = _ref10.storageKey;\n  var _useDataRouterContext3 = useDataRouterContext(DataRouterHook.UseScrollRestoration),\n    router = _useDataRouterContext3.router;\n  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseScrollRestoration),\n    restoreScrollPosition = _useDataRouterState.restoreScrollPosition,\n    preventScrollReset = _useDataRouterState.preventScrollReset;\n  var location = useLocation();\n  var matches = useMatches();\n  var navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(function () {\n    window.history.scrollRestoration = \"manual\";\n    return function () {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on unload\n\n  useBeforeUnload(React.useCallback(function () {\n    if (navigation.state === \"idle\") {\n      var key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      try {\n        var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(function () {\n      var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {\n        return window.scrollY;\n      }, getKey);\n      return function () {\n        return disableScrollRestoration && disableScrollRestoration();\n      };\n    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(function () {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n      if (location.hash) {\n        var el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Opt out of scroll reset if this link requested it\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(function () {\n    window.addEventListener(\"beforeunload\", callback);\n    return function () {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"sources":["../dom.ts","../index.tsx"],"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","has","getAll","forEach","append","getFormSubmissionInfo","defaultAction","options","method","action","encType","formData","submissionTrigger","getAttribute","FormData","name","type","form","Error","Object","protocol","host","window","location","url","URL","routes","opts","basename","history","createBrowserHistory","hydrationData","parseHydrationData","enhanceManualRouteObjects","initialize","createHashHistory","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponse","status","statusText","data","internal","error","message","stack","BrowserRouter","children","historyRef","React","useRef","current","v5Compat","setState","useState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","HistoryRouter","displayName","Link","forwardRef","LinkWithRef","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","ref","href","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","path","useResolvedPath","useLocation","routerState","useContext","DataRouterStateContext","NavigationContext","toPathname","encodeLocation","pathname","locationPathname","nextLocationPathname","navigation","isActive","startsWith","charAt","length","isPending","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","onSubmit","fetcherKey","routeId","forwardedRef","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","DataRouterContext","useDataRouterState","replaceProp","navigate","useNavigate","useCallback","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","useMemo","getSearchParamsForLocation","search","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","router","UseSubmitImpl","document","formEncType","fetch","routeContext","RouteContext","match","matches","slice","hash","route","index","params","delete","toString","joinPaths","createFetcherForm","FetcherForm","fetcherId","useFetcher","UseFetcher","id","String","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","UseFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","useBeforeUnload","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","e","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","scrollIntoView","callback","addEventListener","removeEventListener","warning","cond"],"mappings":"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","sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method: method.toLowerCase(), encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  joinPaths,\n  ErrorResponse,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as FormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Opt out of scroll reset if this link requested it\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any\n): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n"]},"metadata":{},"sourceType":"module"}