{"version":3,"sources":["functions.js","components/Tag.js","redux/slices/filterSlice.js","redux/slices/resourcesSlice.js","components/Filters.js","components/App.js","components/pages/welcome.js","components/router.js","redux/store.js","index.js"],"names":["luma","color","rgb","startsWith","substring","length","charAt","Error","i","parseInt","substr","hexToRGBArray","module","exports","getContrastingColorFromHex","string2color","str","hash","charCodeAt","toString","Tag","tag","style","props","textColor","backgroundColor","pushReplaceSearchParams","new_searchParams","url","URL","window","location","old_search_params_string","searchParams","new_search_params_string","URLSearchParams","Array","from","entries","filter","key","has","value","String","sort","key_a","key_b","localeCompare","origin","pathname","history","pushState","filterSlice","createSlice","name","initialState","tags","selectedTags","queryText","latitude","longitude","reducers","setTags","state","action","payload","setSelectedTags","toggleTag","includes","push","Boolean","join","setQueryText","setGeoLocation","clearGeoLocation","actions","selectTags","selectSelectedTags","selectQueryText","selectGeoLocation","resourcesSlice","resources","setResources","fetchResources","createAsyncThunk","thunkApi","console","log","dispatch","getState","search_params_data","lat","lon","filtered_selectedTags","isArray","q","search_params","urls","api","fetch","then","response","json","data","selectResources","Filters","onError","useDispatch","useSelector","loadResources","React","useCallback","loadTags","current_url","get","getLocation","navigator","geolocation","getCurrentPosition","position","coords","error","message","clearLocation","thisToggleTag","queryTextChanged","event","target","useEffect","reload","selected_tags","split","new_query_text","addEventListener","removeEventListener","className","onClick","map","margin","type","placeholder","defaultValue","onChange","get_smaller_url","replace","App","useState","showFilters","setShowFilters","setError","toggleFilters","href","rel","resource","links","main_link","hasOwnProperty","link","title","contact","phoneNumber","parsePhoneNumber","phone","getURI","formatInternational","email","description","cursor","JSON","stringify","Welcome","router","createHashRouter","path","element","children","configureStore","reducer","filterReducer","resourcesReducer","isLocalhost","hostname","env","frontend","dev_domain","ReactDOM","render","StrictMode","store","fallbackElement","document","getElementById"],"mappings":"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","file":"static/js/main.cc1fca25.chunk.js","sourcesContent":["function hexToRGBArray(color) {\n  if (color.startsWith('#')) {\n    color = color.substring(1)\n  }\n\n  if (color.length === 3) {\n    color = color.charAt(0) + color.charAt(0) + color.charAt(1) + color.charAt(1) + color.charAt(2) + color.charAt(2);\n  } else if (color.length !== 6) {\n    throw (new Error('Invalid hex color: ' + color));\n  }\n\n  let rgb = [];\n  for (var i = 0; i <= 2; i++) {\n    rgb[i] = parseInt(color.substr(i * 2, 2), 16);\n  }\n\n  return rgb;\n}\nfunction luma(color) {\n  // color can be a hex string or an array of RGB values 0-255\n  const rgb = (typeof color === 'string') ? hexToRGBArray(color) : color;\n  return (0.2126 * rgb[0]) + (0.7152 * rgb[1]) + (0.0722 * rgb[2]); // SMPTE C, Rec. 709 weightings\n}\nfunction getContrastingColorFromHex(color) {\n  // source: https://stackoverflow.com/questions/635022/calculating-contrasting-colours-in-javascript\n  // exact answer: https://stackoverflow.com/a/6511606/2387277\n  // example: https://jsfiddle.net/thomasrosen/9njo6t7s/20/\n\n  return (luma(color) >= 165) ? '#000' : '#fff';\n}\n\nfunction string2color(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n}\n\nmodule.exports = {\n  getContrastingColorFromHex,\n  string2color,\n};\n","import React from 'react'\n\nimport {\n  getContrastingColorFromHex,\n  string2color,\n} from '../functions.js'\n\nexport default function Tag({\n  tag,\n  style,\n  ...props\n}) {\n  const color = string2color(tag) // TODO make sure to only run this once\n  // TODO define the colors instead of generating them\n  const textColor = getContrastingColorFromHex(color) // TODO make sure to only run this once\n\n  return <button\n    {...props}\n    style={{\n      backgroundColor: color,\n      color: textColor,\n      ...style,\n    }}\n  >\n    {tag}\n  </button>\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nfunction pushReplaceSearchParams(new_searchParams) {\n  let url = new URL(window.location)\n\n  const old_search_params_string = url.searchParams.toString()\n\n  const new_search_params_string = new URLSearchParams(\n    [\n      ...(\n        Array.from(url.searchParams.entries())\n          .filter(([key]) => !new_searchParams.has(key))\n      ),\n      ...(\n        [...new_searchParams.entries()]\n          .filter(([, value]) => String(value).length > 0)\n      ),\n    ]\n      .sort(([key_a], [key_b]) => key_a.localeCompare(key_b)) // sort alphabetically\n  ).toString()\n\n  if (old_search_params_string !== new_search_params_string) {\n    url = new URL(`${url.origin}${url.pathname}${new_search_params_string.length > 0 ? '?' + new_search_params_string : ''}`)\n    window.history.pushState({}, '', url)\n  }\n}\n\nexport const filterSlice = createSlice({\n  name: 'filter',\n  initialState: {\n    tags: [],\n    selectedTags: [],\n    queryText: '',\n    latitude: 0,\n    longitude: 0,\n  },\n  reducers: {\n    setTags: (state, action) => {\n      state.tags = action.payload\n    },\n    setSelectedTags: (state, action) => {\n      state.selectedTags = action.payload\n    },\n    toggleTag: (state, action) => {\n      if (state.selectedTags.includes(action.payload)) {\n        state.selectedTags = state.selectedTags.filter(tag => tag !== action.payload)\n      } else {\n        state.selectedTags.push(action.payload)\n      }\n\n      state.selectedTags = state.selectedTags.filter(Boolean)\n\n      if (state.selectedTags.length === 0) {\n        pushReplaceSearchParams(new URLSearchParams([\n          ['tags', ''],\n        ]))\n      } else {\n        pushReplaceSearchParams(new URLSearchParams([\n          ['tags', state.selectedTags.join(',')],\n        ]))\n      }\n    },\n    setQueryText: (state, action) => {\n      state.queryText = action.payload\n\n      if (state.queryText.length === 0) {\n        pushReplaceSearchParams(new URLSearchParams([\n          ['q', ''],\n        ]))\n      } else {\n        pushReplaceSearchParams(new URLSearchParams([\n          ['q', state.queryText],\n        ]))\n      }\n    },\n    setGeoLocation: (state, action) => {\n      state.latitude = action.payload.latitude\n      state.longitude = action.payload.longitude\n\n      pushReplaceSearchParams(new URLSearchParams([\n        ['lat', state.latitude],\n        ['lon', state.longitude],\n      ]))\n    },\n    clearGeoLocation: (state) => {\n      state.latitude = null\n      state.longitude = null\n\n      pushReplaceSearchParams(new URLSearchParams([\n        ['lat', ''],\n        ['lon', ''],\n      ]))\n    }\n  }\n})\n\nexport const {\n  setTags,\n  setSelectedTags,\n  toggleTag,\n  setQueryText,\n  setGeoLocation,\n  clearGeoLocation,\n} = filterSlice.actions\n\nexport const selectTags = state => state.filter.tags\nexport const selectSelectedTags = state => state.filter.selectedTags.filter(Boolean)\nexport const selectQueryText = state => state.filter.queryText\nexport const selectGeoLocation = state => ({\n  latitude: state.filter.latitude,\n  longitude: state.filter.longitude,\n})\n\nexport default filterSlice.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\nexport const resourcesSlice = createSlice({\n  name: 'resources',\n  initialState: {\n    resources: [],\n  },\n  reducers: {\n    setResources: (state, action) => {\n      state.resources = action.payload\n    },\n  }\n})\n\nexport const {\n  setResources,\n} = resourcesSlice.actions\n\nexport const fetchResources = createAsyncThunk('resources/fetchResources', async (value, thunkApi) => {\n  console.log('fetchResources')\n  const {\n    dispatch,\n    getState,\n  } = thunkApi || {}\n\n  const { filter } = getState()\n\n  const {\n    latitude,\n    longitude,\n    selectedTags,\n    queryText,\n  } = filter || {}\n\n  const search_params_data = {}\n\n  if (\n    latitude !== null && String(latitude).length > 0\n    && longitude !== null && String(longitude).length > 0\n  ) {\n    search_params_data.lat = latitude\n    search_params_data.lon = longitude\n  }\n\n  const filtered_selectedTags = selectedTags.filter(Boolean)\n  if (Array.isArray(filtered_selectedTags) && filtered_selectedTags.length > 0) {\n    search_params_data.tags = filtered_selectedTags.join(',')\n  }\n\n  if (typeof queryText === 'string' && queryText.length > 0) {\n    search_params_data.q = queryText\n  }\n\n  const search_params = new URLSearchParams(search_params_data).toString()\n\n  const url = `${window.urls.api}resources.json${search_params.length > 0 ? '?' + search_params : ''}`;\n\n  console.log('url', url)\n\n  fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      console.log('data', data)\n      dispatch(setResources(data.resources))\n    })\n})\n\nexport const selectResources = state => state.resources.resources\n\nexport default resourcesSlice.reducer\n","import React from 'react'\nimport './App.css'\n\nimport '../fonts/ubuntu-v15-latin/index.css'\nimport '../fonts/ubuntu-mono-v10-latin/index.css'\n\nimport Tag from './Tag.js'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setTags,\n  setSelectedTags,\n  toggleTag,\n  setQueryText,\n  setGeoLocation,\n  clearGeoLocation,\n\n  selectTags,\n  selectSelectedTags,\n  selectQueryText,\n  selectGeoLocation,\n} from '../redux/slices/filterSlice.js'\nimport {\n  fetchResources,\n  selectResources,\n} from '../redux/slices/resourcesSlice.js'\n\nexport default function Filters({\n  onError = () => { },\n}) {\n  const dispatch = useDispatch()\n\n  const tags = useSelector(selectTags)\n  const selectedTags = useSelector(selectSelectedTags)\n  const queryText = useSelector(selectQueryText)\n  const { latitude, longitude } = useSelector(selectGeoLocation)\n\n  const resources = useSelector(selectResources)\n\n  const loadResources = React.useCallback(() => {\n    dispatch(fetchResources())\n  }, [dispatch])\n\n  const loadTags = React.useCallback(() => {\n\n    const current_url = new URL(window.location);\n    const latitude = (current_url.searchParams.get('lat') || '')\n    const longitude = (current_url.searchParams.get('lon') || '')\n\n    const search_params_data = {}\n\n    if (\n      typeof latitude === 'string' && latitude.length > 0 &&\n      typeof longitude === 'string' && longitude.length > 0\n    ) {\n      search_params_data.lat = latitude\n      search_params_data.lon = longitude\n    }\n\n    const search_params = new URLSearchParams(search_params_data).toString()\n\n    const url = `${window.urls.api}tags.json${search_params.length > 0 ? '?' + search_params : ''}`;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setTags(data.tags))\n        loadResources()\n      })\n\n  }, [dispatch, loadResources])\n\n  const getLocation = React.useCallback(() => {\n\n    // dispatch(setGeoLocation({\n    //   latitude: 48.1351253,\n    //   longitude: 11.5819806,\n    // }))\n\n    // loadTags()\n    // loadResources()\n\n    // onError('')\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        onError('')\n\n        dispatch(setGeoLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        }))\n\n        loadTags()\n        loadResources()\n      }, (error) => {\n        onError(error.message)\n      })\n    } else {\n      onError('Geolocation is not supported by this browser.')\n    }\n  }, [dispatch, onError, loadTags, loadResources])\n\n  const clearLocation = React.useCallback(() => {\n    dispatch(clearGeoLocation())\n    loadTags()\n    loadResources()\n  }, [dispatch, loadTags, loadResources])\n\n  const thisToggleTag = React.useCallback(tag => {\n    dispatch(toggleTag(tag))\n    loadResources()\n  }, [dispatch, loadResources])\n\n  const queryTextChanged = React.useCallback(event => {\n    if (event) {\n      dispatch(setQueryText(event.target.value))\n      loadResources()\n    }\n  }, [dispatch, loadResources])\n\n  React.useEffect(() => {\n\n    function reload() {\n      const current_url = new URL(window.location);\n\n      const latitude = (current_url.searchParams.get('lat') || '')\n      const longitude = (current_url.searchParams.get('lon') || '')\n      dispatch(setGeoLocation({ latitude, longitude }))\n\n      const selected_tags = (current_url.searchParams.get('tags') || '').split(',')\n      dispatch(setSelectedTags(selected_tags))\n\n      const new_query_text = current_url.searchParams.get('q') || ''\n      dispatch(setQueryText(new_query_text))\n\n      loadResources()\n    }\n    reload()\n    window.addEventListener('popstate', reload)\n\n    return () => {\n      window.removeEventListener('popstate', reload)\n    }\n  }, [dispatch, loadResources])\n\n  React.useEffect(() => {\n    loadTags()\n  }, [loadTags, latitude, longitude])\n\n  return <div>\n    <h2>Filter for resources in near you:</h2>\n    <div className=\"tag_row\">\n      <button onClick={getLocation}>Get my Location</button>\n      {\n        latitude && longitude\n          ? <button onClick={clearLocation}>Clear Location</button>\n          : null\n      }\n    </div>\n    {\n      latitude && longitude\n        ? <p>Your Location: {latitude} / {longitude}</p>\n        : null\n    }\n\n    <br />\n    <h2>Filter by tag:</h2>\n    <div className=\"tag_row\">\n      {tags && tags.map(tag => {\n        return <Tag\n          key={tag}\n          tag={tag}\n          data-selected={selectedTags.includes(tag) ? 'true' : 'false'}\n          onClick={() => thisToggleTag(tag)}\n        />\n      })}\n    </div>\n\n    <br />\n    <h2>Search:</h2>\n    <input\n      style={{ margin: '20px 0' }}\n      type=\"search\"\n      placeholder=\"Search…\"\n      defaultValue={queryText}\n      onChange={queryTextChanged}\n    />\n\n    <br />\n    <br />\n    <h2>Result Summary:</h2>\n    <br />\n    {\n      resources.length === 0\n        ? <p>No resources found.</p>\n        : null\n    }\n    {\n      resources.length === 1\n        ? <p>One resources found.</p>\n        : null\n    }\n    {\n      resources.length > 1\n        ? <p>{resources.length} resources found.</p>\n        : null\n    }\n\n  </div>\n}\n","import React from 'react'\nimport './App.css'\n\nimport '../fonts/ubuntu-v15-latin/index.css'\nimport '../fonts/ubuntu-mono-v10-latin/index.css'\n\nimport parsePhoneNumber from 'libphonenumber-js' // TODO move this to the backend to save bandwidth on the client\n\nimport {\n  Outlet,\n} from 'react-router-dom'\n\nimport Tag from './Tag.js'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  toggleTag,\n  selectSelectedTags,\n} from '../redux/slices/filterSlice.js'\nimport {\n  fetchResources,\n  selectResources,\n} from '../redux/slices/resourcesSlice.js'\n\nimport Filters from './Filters.js'\n\nfunction get_smaller_url (url) {\n  // check if url only contains exactly three slashes\n  if (url.split('/').length <= 4) {\n    // url is only a domain\n    const regex = /.*:\\/\\/(?:www\\.)?([^/]*).*/gm\n    const smaller_url = url.replace(regex, `$1`)\n    return smaller_url\n  }\n\n  // url has a path so return full url\n  return url\n}\n\nexport default function App() {\n\n  const dispatch = useDispatch()\n\n  const resources = useSelector(selectResources)\n  const selectedTags = useSelector(selectSelectedTags)\n\n  const thisToggleTag = React.useCallback(tag => {\n    dispatch(toggleTag(tag))\n    dispatch(fetchResources())\n  }, [dispatch])\n\n  const [showFilters, setShowFilters] = React.useState(false)\n\n  const [error, setError] = React.useState(null)\n\n  const toggleFilters = () => {\n    setShowFilters(showFilters => !showFilters)\n  }\n\n  return <div className={`app_wrapper ${showFilters === true ? 'show_filters' : 'hide_filters'}`}>\n    <header>\n\n      {\n        showFilters === true\n          ? <button\n            className=\"hide_on_large_screens\"\n            onClick={toggleFilters}\n          >\n            Close Filters\n          </button>\n          : null\n      }\n\n      <h1>🏳️‍🌈 QR</h1>\n\n      <a href=\"https://github.com/thomasrosen/queer\" target=\"_blank\" rel=\"noreferrer\">Sourcecode</a>\n    </header>\n\n    <nav>\n      <Filters\n        onError={setError}\n        />\n    </nav>\n\n    <main>\n      <h1>🏳️‍🌈 Queer Resources</h1>\n\n      <br />\n\n      <p>A collection of resources for queer people. You're of course also welcome to look through the information if you are an ally.</p>\n\n      <p>You can filter the links via your location and some tags.</p>\n\n      <p>\n        The website is maintained by <a href=\"https://thomasrosen.me/\" target=\"_blank\" rel=\"noreferrer\">Thomas Rosen</a>.<br />\n        Send an email to <a href=\"mailto:queer@thomasrosen.me\">queer@thomasrosen.me</a> if you want to add a resource.\n      </p>\n\n      <div className=\"hide_on_large_screens\">\n        <br />\n        <button\n          onClick={toggleFilters}\n        >\n          {showFilters === true ? 'Close Filters' : 'Open Filters'}\n        </button>\n        <br />\n      </div>\n\n      <br />\n      <br />\n\n      {error && <p>Error: {error}</p>}\n\n      {\n        resources &&\n        resources.map(resource => {\n          const links = []\n\n          let main_link = null\n          if (resource.hasOwnProperty('link')) {\n            if (Array.isArray(resource.link) && resource.link.length > 0) {\n              main_link = resource.link[0]\n              links.push(...resource.link.map(link => ({\n                url: link,\n                title: get_smaller_url(link),\n              })))\n            } else if (typeof resource.link === 'string') {\n              main_link = resource.link\n              links.push({\n                url: resource.link,\n                title: get_smaller_url(resource.link),\n              })\n            }\n          }\n\n          if (\n            resource.hasOwnProperty('contact')\n            && Array.isArray(resource.contact)\n            && resource.contact.length > 0\n          ) {\n            for (const contact of resource.contact) {\n              if (contact.hasOwnProperty('phone')) {\n                const phoneNumber = parsePhoneNumber(contact.phone)\n                links.push({\n                  url: phoneNumber.getURI(),\n                  title: phoneNumber.formatInternational(), // phoneNumber.formatNational() \n                })\n              }\n              if (contact.hasOwnProperty('email')) {\n                links.push({\n                  url: `mailto:${contact.email}`,\n                  title: contact.email,\n                })\n              }\n            }\n          }\n\n          return <div key={JSON.stringify(resource)}>\n            <h3>\n              {\n                main_link !== null\n                  ? <a href={main_link} target=\"_blank\" rel=\"noreferrer\">\n                    {resource.title}\n                  </a>\n                  : resource.title\n              }\n            </h3>\n            {\n              !!resource.description && resource.description.length > 0\n                ? <p>{resource.description}</p>\n                : null\n            }\n\n            <div className=\"tag_row small\">\n              {\n                links.map(({title, url}) => {\n                  return <a key={url} href={url}>\n                    <Tag\n                      className=\"small\"\n                      tag={title}\n                      style={{\n                        cursor: 'pointer'\n                      }}\n                      data-selected=\"false\"\n                    />\n                  </a>\n                })\n              }\n            </div>\n\n            <div className=\"tag_row small\">\n              {\n                resource.tags.map(tag => {\n                  return <Tag\n                    className=\"small\"\n                    key={tag}\n                    tag={tag}\n                    data-selected={selectedTags.includes(tag) ? 'true' : 'false'}\n                    onClick={() => thisToggleTag(tag)}\n                  />\n                })\n              }\n            </div>\n            <br />\n          </div>\n        })\n      }\n      {\n        resources && resources.length === 0\n          ? <p>No resources found.</p>\n          : null\n      }\n      {\n        !resources\n          ? <p>Loading...</p>\n          : null\n      }\n\n      <Outlet />\n    </main>\n\n  </div>\n}\n","export default function Welcome() {\n  return <div>\n      \n  </div>\n}\n","import {\n  createHashRouter,\n} from 'react-router-dom'\n\nimport App from './App.js'\nimport Welcome from './pages/welcome.js'\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    children: [\n      {\n        path: '/',\n        element: <Welcome />,\n      },\n      {\n        path: '*',\n        element: <Welcome />,\n      },\n    ]\n  },\n]);\n","import { configureStore } from '@reduxjs/toolkit'\nimport filterReducer from './slices/filterSlice.js'\nimport resourcesReducer from './slices/resourcesSlice.js'\n\nexport default configureStore({\n  reducer: {\n    filter: filterReducer,\n    resources: resourcesReducer,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { router } from './components/router.js';\nimport {\n  RouterProvider,\n} from 'react-router-dom'\n\nimport { Provider as ReduxProvider } from 'react-redux'\nimport store from './redux/store.js'\n\n// import reportWebVitals from './reportWebVitals';\n\n// check if domain is 0.0.0.0\nconst isLocalhost = Boolean(\n  window.location.hostname === '0.0.0.0' ||\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]'\n)\n\nwindow.env = isLocalhost === true ? 'dev' : 'prod'\nwindow.urls = {\n  frontend: 'https://queer.thomasrosen.me/',\n  api: 'https://queer.thomasrosen.me/api/',\n}\nif (window.env === 'dev') {\n  const dev_domain = 'localhost' // 0.0.0.0\n  window.urls.frontend = `http://${dev_domain}:3000/`\n  window.urls.api = `http://${dev_domain}:17215/api/`\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <RouterProvider\n        router={router}\n        fallbackElement=\"Loading…\"\n      />\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.info))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}